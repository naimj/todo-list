const filterTrads = (items, q, codeLower) => {
  return items.filter(({ TRADUCTION }) => {
    const t = TRADUCTION?.toLowerCase() || ''
    return t.includes(q) || codeLower.includes(q)
  })
}

const searchResult = (query) => {
  const q = query.trim().toLowerCase()
  if (!q) return groupedData.value

  const result = {}

  for (const [domaine, codes] of Object.entries(groupedData.value)) {
    for (const [codeTrad, items] of Object.entries(codes)) {
      const filteredItems = filterTrads(items, q, codeTrad.toLowerCase())
      if (filteredItems.length) {
        result[domaine] ??= {}
        result[domaine][codeTrad] = filteredItems
      }
    }
  }

  return result
}

const onSearchQuery = useDebounceFn(() => {
  const q = searchTrad.value.trim()

  // 1. applique la recherche
  filteredData.value = searchResult(q)

  // 2. ouvre tous les domaines et codes trouvés
  if (q) {
    const domainKeys = Object.keys(filteredData.value)
    openedDomains.value = domainKeys

    const codesToOpen = {}
    domainKeys.forEach((domain) => {
      codesToOpen[domain] = Object.keys(filteredData.value[domain])
    })
    openedCodes.value = codesToOpen
  } else {
    // champ vide → tout fermer
    openedDomains.value = []
    openedCodes.value = {}
  }
}, 250)
